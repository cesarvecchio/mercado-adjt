{"uuid":"47d552c2-298d-44fa-8d50-fa8dc178d231","historyId":"65b956ddffc7f5ea049b79684f18f19b","testCaseId":"[engine:junit-jupiter]/[class:br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest]/[nested-class:CadastrarCliente]/[method:deveCadastrarCliente()]","testCaseName":"deveCadastrarCliente()","fullName":"br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest$CadastrarCliente.deveCadastrarCliente","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest]/[nested-class:CadastrarCliente]/[method:deveCadastrarCliente()]"},{"name":"host","value":"DESKTOP-O4LPNQJ"},{"name":"thread","value":"13280@DESKTOP-O4LPNQJ.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest$CadastrarCliente"},{"name":"testClass","value":"br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest$CadastrarCliente"},{"name":"testMethod","value":"deveCadastrarCliente"},{"name":"suite","value":"br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest.CadastrarCliente"}],"links":[],"name":"deveCadastrarCliente()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <ClienteResponseDTO[id=null, nome=Guilherme Matos de Carvalho, cpf=12345678910, telefone=11987654321, email=8Xa5I@example.com, endereco=Endereco(cep=9, logradouro=123, complemento=Casa, bairro=Centro, cidade=Saﾌバ Paulo, uf=SP, numero=12345678, latitude=1111.54551, longitude=111122.226)]> but was: <ClienteResponseDTO[id=1, nome=Guilherme Matos de Carvalho, cpf=12345678910, telefone=11987654321, email=8Xa5I@example.com, endereco=Endereco(cep=9, logradouro=123, complemento=Casa, bairro=Centro, cidade=Saﾌバ Paulo, uf=SP, numero=12345678, latitude=1111.54551, longitude=111122.226)]>","trace":"org.opentest4j.AssertionFailedError: expected: <ClienteResponseDTO[id=null, nome=Guilherme Matos de Carvalho, cpf=12345678910, telefone=11987654321, email=8Xa5I@example.com, endereco=Endereco(cep=9, logradouro=123, complemento=Casa, bairro=Centro, cidade=Saﾌバ Paulo, uf=SP, numero=12345678, latitude=1111.54551, longitude=111122.226)]> but was: <ClienteResponseDTO[id=1, nome=Guilherme Matos de Carvalho, cpf=12345678910, telefone=11987654321, email=8Xa5I@example.com, endereco=Endereco(cep=9, logradouro=123, complemento=Casa, bairro=Centro, cidade=Saﾌバ Paulo, uf=SP, numero=12345678, latitude=1111.54551, longitude=111122.226)]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1142)\r\n\tat br.com.cadastrocliente.mscadastrocliente.domain.service.ClienteServiceTest$CadastrarCliente.deveCadastrarCliente(ClienteServiceTest.java:177)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1716055544443,"stop":1716055544743}